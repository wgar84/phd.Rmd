contMap.alt <-
  function (tree, x, res = 100, fsize = NULL, ftype = NULL, lwd = 4, 
            legend = NULL, lims = NULL, outline = TRUE, sig = 3, type = "phylogram", 
            direction = "rightwards", plot = TRUE, anc = NULL, ...)
{
  if (hasArg(mar)) 
    mar <- list(...)$mar
  else mar <- rep(0.3, 4)
  if (hasArg(offset)) 
    offset <- list(...)$offset
  else offset <- NULL
  if (hasArg(method)) 
    method <- list(...)$method
  else method <- "fastAnc"
  if (hasArg(hold)) 
    hold <- list(...)$hold
  else hold <- TRUE
  h <- max(nodeHeights(tree))
  steps <- 0:res/res * max(h)
  H <- nodeHeights(tree)
  if (is.null (anc))
    {
      if (method == "fastAnc") 
        a <- fastAnc(tree, x)
      else
        {
          fit <- anc.ML(tree, x)
          a <- fit$ace
          if (!is.null(fit$missing.x)) 
            x <- c(x, fit$missing.x)
        }
    }
  else
    a <- anc
  y <- c(a, x[tree$tip.label])
  names(y)[1:length(tree$tip) + tree$Nnode] <- 1:length(tree$tip)
  A <- matrix(y[as.character(tree$edge)], nrow(tree$edge), 
              ncol(tree$edge))
  cols <- rainbow(1001, start = 0, end = 0.7)
  names(cols) <- 0:1000
  if (is.null(lims)) 
    lims <- c(min(x), max(x))
  trans <- 0:1000/1000 * (lims[2] - lims[1]) + lims[1]
  names(trans) <- 0:1000
  for (i in 1:nrow(tree$edge))
    {
      XX <- cbind(c(H[i, 1],
                    steps[intersect(which(steps > H[i, 1]), which(steps < H[i, 2]))]),
                  c(steps[intersect(which(steps > H[i, 1]), which(steps < H[i, 2]))],
                    H[i, 2])) - H[i, 1]
      YY <- rowMeans(XX)
      if (!all(YY == 0))
        {
          b <- vector()
          for (j in 1:length(YY))
            b[j] <-
              (A[i, 1]/YY[j] + 
               A[i, 2]/(max(XX) - YY[j]))/(1/YY[j] + 1/(max(XX) - YY[j]))
        }
      else
        b <- A[i, 1]
      d <- sapply(b, phytools:::getState, trans = trans)
      tree$maps[[i]] <- XX[, 2] - XX[, 1]
      names(tree$maps[[i]]) <- d
    }
  tree$mapped.edge <- makeMappedEdge(tree$edge, tree$maps)
  tree$mapped.edge <- tree$mapped.edge[, order(as.numeric(colnames(tree$mapped.edge)))]
  xx <- list(tree = tree, cols = cols, lims = lims)
  class(xx) <- "contMap"
  if (plot) 
    plot.contMap(xx, fsize = fsize, ftype = ftype, lwd = lwd, 
                 legend = legend, outline = outline, sig = sig, type = type, 
                 mar = mar, direction = direction, offset = offset, 
                 hold = hold)
  invisible(xx)
}
